import streamlit as st
import pandas as pd 
from PIL import Image
import numpy as np 

st.title("üéà My new streamlit app")
st.write(
    "Let's start building! For help and inspiration, head over to [docs.streamlit.io](https://docs.streamlit.io/)."
)

import streamlit as st
from PIL import Image
import pandas as pd

# --- Barre lat√©rale de navigation ---
st.sidebar.title("Navigation")
page = st.sidebar.radio("Choisissez une page :", ["Accueil", "Exploration de donn√©es", "Visualisation", "√Ä propos de"])

# --- Page Accueil ---
if page == "Accueil":
    st.title("üéÆ Bienvenue sur l'Accueil !")
    st.write("Choisissez une option dans la barre lat√©rale pour commencer.")

# --- Page Exploration de donn√©es ---
elif page == "Exploration de donn√©es":
    st.title("üìä Exploration de donn√©es")
    
# T√©l√©chargement d'un fichier CSV
uploaded_file = st.file_uploader("T√©l√©chargez un fichier CSV", type=["csv"])
    
if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    st.write("Aper√ßu des donn√©es :")
    st.dataframe(df)

# --- Page Visualisation ---
elif page == "Visualisation":
    st.title("üì∑ Lire et afficher des images")
    
# T√©l√©chargement et affichage d'images
uploaded_image = st.file_uploader("T√©l√©chargez une image", type=["png", "jpg", "jpeg"])
    
if uploaded_image is not None:
    image = Image.open(uploaded_image)
    st.image(image, caption="Image charg√©e", use_container_width=True)

# --- Page √Ä propos de ---
elif page == "√Ä propos de":
    st.title("‚ÑπÔ∏è √Ä propos de cette application")
    st.write("Cette application a √©t√© cr√©√©e avec Streamlit pour afficher des donn√©es et des images.")

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st

st.title("üìä Exploration de donn√©es")

# 1Ô∏è‚É£ Chargement du fichier CSV
uploaded_file = st.file_uploader("vgsales_cleaning.csv", type=["csv"])
if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)

# Cr√©er des onglets pour s√©parer exploration et visualisation
    tab_exploration, tab_visualisation = st.tabs(["Exploration des donn√©es", "Visualisation"])
    
    # 2Ô∏è‚É£ Exploration des donn√©es (dans l'onglet exploration)
    with tab_exploration:
        st.subheader("Aper√ßu des donn√©es")
        st.dataframe(df.head())  
    
    # 2Ô∏è‚É£ Aper√ßu des donn√©es
    st.subheader("Aper√ßu des donn√©es")
    st.dataframe(df.head())  # Affiche les 5 premi√®res lignes du DataFrame

    # 3Ô∏è‚É£ Informations g√©n√©rales
    st.subheader("Informations g√©n√©rales")
    st.write(df.info())

    # 4Ô∏è‚É£ Valeurs manquantes
    st.subheader("Valeurs manquantes")
    st.write(df.isnull().sum())

    # 5Ô∏è‚É£ Statistiques descriptives
    st.subheader("Statistiques g√©n√©rales")
    st.write(df.describe())
else:
    st.write("Veuillez t√©l√©charger un fichier CSV pour commencer l'analyse.")



    
 












